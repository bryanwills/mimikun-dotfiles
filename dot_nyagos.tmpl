---@diagnostic disable:undefined-global
-- local vars
local os_name = nyagos.goos
local hostname = nyagos.eval("hostname")
local uname_r = nyagos.eval("uname", "-r")

local is_linux = os_name == "linux"
local is_windows = os_name == "windows"
local is_human_rights = hostname == "YutoWindows"
local is_not_human_rights = hostname == "TanakaPC"

local path_sep = is_windows and "\\" or "/"

local home = nyagos.getenv("HOME") or nyagos.getenv("USERPROFILE")
local xdg_config_home = home .. path_sep .. ".config"
local xdg_cache_home = home .. path_sep .. ".cache"
local dot_local = home .. path_sep .. ".local"
local xdg_data_home = dot_local .. path_sep .. "share"
local xdg_state_home = dot_local .. path_sep .. "state"

-- function
local today = function()
    local date = os.date("*t")
    local year = date.year
    local month = date.month
    local day = date.day

    if month < 10 then
        month = "0" .. month
    end

    if day < 10 then
        day = "0" .. day
    end

    local formatted_date = tostring(year) .. tostring(month) .. tostring(day)
    return formatted_date
end

-- config
nyagos.envadd("HOME", home)

-- XDG base directory
nyagos.envadd("XDG_CONFIG_HOME", nyagos.getenv("XDG_CONFIG_HOME") or xdg_config_home)
nyagos.envadd("XDG_CACHE_HOME", nyagos.getenv("XDG_CACHE_HOME") or xdg_cache_home)
nyagos.envadd("XDG_DATA_HOME", nyagos.getenv("XDG_DATA_HOME") or xdg_data_home)

nyagos.envadd("XDG_STATE_HOME", nyagos.getenv("XDG_STATE_HOME") or xdg_state_home)

-- envs
nyagos.envadd("LANG", nyagos.getenv("LANG") or "en_US.UTF-8")
nyagos.envadd("GHQ_ROOT", nyagos.getenv("GHQ_ROOT") or (home .. path_sep .. "ghq"))
nyagos.envadd("GHQ_SELECTOR", nyagos.getenv("GHQ_SELECTOR") or "fzf")
nyagos.envadd("PIPENV_VENV_IN_PROJECT", nyagos.getenv("PIPENV_VENV_IN_PROJECT") or 1)
nyagos.envadd("TZ", nyagos.getenv("TZ") or "Asia/Tokyo")
-- TODO: settings
nyagos.envadd("TODAY", nyagos.getenv("TODAY") or today)

local starship_path = xdg_config_home .. path_sep .. "starship"
local starship_config = starship_path .. path_sep .. "starship.toml"
local starship_cache = starship_path .. path_sep .. "cache"
nyagos.envadd("STARSHIP_CONFIG", nyagos.getenv("STARSHIP_CONFIG") or starship_config)
nyagos.envadd("STARSHIP_CACHE", nyagos.getenv("STARSHIP_CACHE") or starship_cache)

-- nyagos envs
nyagos.envadd("NYAGOS_CONFIG", (home .. path_sep .. ".nyagos"))

-- workspace, win_home and obsidian
-- TODO: settings
--[[
local workspace_path = ""
local win_home_path = ""
local obsidian_dailynotes_path = ""

{{ if (eq .chezmoi.hostname "TanakaPC") }}
workspace_path = {{ (bitwardenFields "item" "0f17c992-d0fe-4f36-bde8-95d9e2de3a6d").workspace_path.value }}
win_home_path = {{ (bitwardenFields "item" "0f17c992-d0fe-4f36-bde8-95d9e2de3a6d").win_home_path.value }}
obsidian_dailynotes_path = {{ (bitwardenFields "item" "0f17c992-d0fe-4f36-bde8-95d9e2de3a6d").obsidian_dailynotes_path.value }}
{{ else }}
workspace_path = {{ (bitwardenFields "item" "ec557677-82d9-4a61-a4f6-aed300cfb34f").config_fish_path_workspace.value }}
win_home_path = {{ (bitwardenFields "item" "ec557677-82d9-4a61-a4f6-aed300cfb34f").config_fish_path_win_home.value }}
obsidian_dailynotes_path = {{ (bitwardenFields "item" "ec557677-82d9-4a61-a4f6-aed300cfb34f").obsidian_dailynotes_path.value }}
{{ end }}

nyagos.envadd("WORKSPACE", workspace_path)
nyagos.envadd("WIN_HOME", win_home_path)
nyagos.envadd("obsidian", nyagos.getenv("WIN_HOME") .. obsidian_dailynotes_path)
nyagos.envadd("windl", win_home_path .. "Downloads")
nyagos.envadd("WIN_DESKTOP", win_home_path .. "Desktop")
nyagos.envadd("WIN_DOCUMENTS", win_home_path .. "Documents")
nyagos.envadd("obsidian_vault_path", obsidian_dailynotes_path:format("001_dailyNotes", ""))
]]

-- alias
if is_linux then
    nyagos.alias.f = "fuck"
    nyagos.alias.rm = "gomi"
    nyagos.alias.rm = "rm -i"
    nyagos.alias.mkdir = "mkdir -p"
    nyagos.alias.untar = "tar xvf"
    nyagos.alias.pueued_enable = "systemctl --user enable pueue"
    nyagos.alias.pueued_start = "systemctl --user start pueue"
    nyagos.alias.pueued_restart = "systemctl --user restart pueue"
    nyagos.alias.patch = "patch -p1 <"
    nyagos.alias.imgcat = "wezterm imgcat"
    nyagos.alias.pip = "python3 -m pip"
    nyagos.alias.pipx = "python3 -m pipx"
    nyagos.alias.open = "wsl-open"
    nyagos.alias.zel = "zellij"
    nyagos.alias.pueuexec = "pueue add --"
end

-- alias eza
nyagos.alias.ls = "eza"
nyagos.alias.ll = "ls -l"
nyagos.alias.la = "ls -la"
nyagos.alias.l1 = "ls -1"
nyagos.alias.lt = "ls --tree"
nyagos.alias.lat = "ls -l -a --tree"
nyagos.alias.lta = "ls --tree -a"

-- set PATHs
local cargo_path = home .. path_sep .. ".cargo"
local deno_path = home .. path_sep .. ".deno"

-- Windows and Linux tools
nyagos.envadd("PATH", cargo_path .. path_sep .. "bin")

-- TODO: settings
-- Linux tools
if is_linux then
    nyagos.envadd(
        "PATH",
        "/bin",
        "/sbin",
        "/usr/bin",
        "/usr/sbin",
        "/usr/games",
        "/usr/local/bin",
        "/usr/local/sbin",
        "/usr/local/games",
        "/usr/local/go/bin/",
        "/snap/bin",
        deno_path .. path_sep .. "bin",
        dot_local .. path_sep .. "bin",
        home .. path_sep .. "go" .. path_sep .. "bin",
        home .. path_sep .. ".npm-global" .. path_sep .. "bin",
        home .. path_sep .. ".gem" .. path_sep .. "ruby" .. path_sep .. "2.7.0" .. path_sep .. "bin",
        home .. path_sep .. "depot_tools",
        home .. path_sep .. ".fzf" .. path_sep .. "bin",
        home .. path_sep .. ".dotnet" .. path_sep .. "tools"
    )
end

-- Windows tools
-- TODO: settings
nyagos.envadd("PATH", "")

-- neovim vars
local windows_nvim_config = home .. path_sep .. "AppData" .. path_sep .. "Local" .. path_sep .. "nvim"
local linux_nvim_config = xdg_config_home .. path_sep .. "nvim"
local nvim_config = is_windows and windows_nvim_config or linux_nvim_config
nyagos.envadd("EDITOR", nyagos.getenv("EDITOR") or "nvim")
nyagos.envadd("NVIM_APPNAME", nyagos.getenv("NVIM_APPNAME") or "nvim")
nyagos.envadd("NVIM_CONFIG", nyagos.getenv("NVIM_CONFIG") or nvim_config)

-- Bun
nyagos.envadd("BUN_INSTALL", nyagos.getenv("BUN_INSTALL") or (home .. path_sep .. ".bun"))
nyagos.envadd("PATH", nyagos.getenv("BUN_INSTALL") .. path_sep .. "bin")

-- fly.io
nyagos.envadd("FLYCTL_INSTALL", nyagos.getenv("FLYCTL_INSTALL") or (home .. path_sep .. ".fly"))
nyagos.envadd("PATH", nyagos.getenv("FLYCTL_INSTALL") .. path_sep .. "bin")

-- pnpm
local pnpm_home = xdg_config_home .. path_sep .. "pnpm"
nyagos.envadd("PNPM_HOME", nyagos.getenv("PNPM_HOME") or pnpm_home)
nyagos.envadd("PATH", nyagos.getenv("PNPM_HOME"))

if is_not_human_rights then
    local java_home = xdg_cache_home
        .. path_sep
        .. "coursier"
        .. path_sep
        .. "arc"
        .. path_sep
        .. "https"
        .. path_sep
        .. "github.com"
        .. path_sep
        .. "AdoptOpenJDK"
        .. path_sep
        .. "openjdk8-binaries"
        .. path_sep
        .. "releases"
        .. path_sep
        .. "download"
        .. path_sep
        .. "jdk8u292-b10"
        .. path_sep
        .. "OpenJDK8U-jdk_x64_linux_hotspot_8u292b10.tar.gz"
        .. path_sep
        .. "jdk8u292-b10"
    -- JVM path
    nyagos.envadd("JAVA_HOME", nyagos.getenv("JAVA_HOME") or java_home)
    nyagos.envadd("PATH", nyagos.getenv("JAVA_HOME") .. "bin")

    -- coursier path
    local coursier_path = xdg_data_home .. path_sep .. "coursier" .. path_sep .. "bin"
    nyagos.envadd("PATH", coursier_path)
    -- # windowsのpathとかぶる問題防止
    nyagos.alias.cs = coursier_path .. "bin"
end

-- cabal config
nyagos.envadd("PATH", home .. path_sep .. ".cabal" .. path_sep .. "bin")
nyagos.envadd("PATH", home .. path_sep .. ".ghcup" .. path_sep .. "bin")

-- wsl2-ssh-agent
nyagos.envadd(
    "SSH_AUTH_SOCK",
    nyagos.getenv("SSH_AUTH_SOCK") or (home .. path_sep .. ".ssh" .. path_sep .. "wsl2-ssh-agent.sock")
)

-- https://github.com/antfu/ni config
nyagos.envadd(
    "NI_CONFIG_FILE",
    nyagos.getenv("NI_CONFIG_FILE") or (xdg_config_home .. path_sep .. "ni" .. path_sep .. ".nirc")
)

-- codon config
nyagos.envadd("PATH", home .. path_sep .. ".codon" .. path_sep .. "bin")

-- Rye
nyagos.envadd("PATH", home .. path_sep .. ".rye" .. path_sep .. "shims")

-- rtx PATHs
nyagos.envadd("RTX_DATA_DIR", nyagos.getenv("RTX_DATA_DIR") or (home .. path_sep .. ".rtx"))
nyagos.envadd("RTX_CACHE_DIR", nyagos.getenv("RTX_DATA_DIR") .. path_sep .. "cache")

-- luarocks
nyagos.envadd("PATH", home .. path_sep .. ".luarocks" .. path_sep .. "bin")
nyagos.envadd(
    "LUA_PATH",
    "/usr/local/share/lua/5.3/?.lua",
    "/usr/local/share/lua/5.3/?/init.lua",
    "/usr/local/lib/lua/5.3/?.lua",
    "/usr/local/lib/lua/5.3/?/init.lua",
    "./?.lua",
    "./?/init.lua",
    home .. ".luarocks/share/lua/5.3/?.lua",
    home .. ".luarocks/share/lua/5.3/?/init.lua"
)
nyagos.envadd(
    "LUA_CPATH",
    "/usr/local/lib/lua/5.3/?.so",
    "/usr/local/lib/lua/5.3/loadall.so",
    "./?.so",
    "$HOME/.luarocks/lib/lua/5.3/?.so"
)

-- asdf
local asdf_dir = home .. path_sep .. ".asdf"
local asdf_bin = asdf_dir .. path_sep .. "bin"
local asdf_shims = asdf_dir .. path_sep .. "shims"
nyagos.envadd("PATH", asdf_bin, asdf_shims)
nyagos.envadd("ASDF_DIR", nyagos.getenv("ASDF_DIR") or asdf_dir)
nyagos.envadd("ASDF_DATA_DIR", nyagos.getenv("ASDF_DATA_DIR") or asdf_dir)
nyagos.envadd("ASDF_CONFIG_FILE", nyagos.getenv("ASDF_CONFIG_FILE") or home .. path_sep .. ".asdfrc")

-- vim alias
nyagos.alias.paleovim = asdf_shims .. path_sep .. "vim"
nyagos.alias.pvim = paleovim
nyagos.alias.neovim = asdf_shims .. path_sep .. "nvim"
nyagos.alias.vim = neovim

-- aqua
nyagos.envadd("AQUA_ROOT_DIR", nyagos.getenv("AQUA_ROOT_DIR") or xdg_data_home .. path_sep .. "aquaproj-aqua")
nyagos.envadd("PATH", nyagos.getenv("AQUA_ROOT_DIR") .. path_sep .. "bin")

-- Prompt
nyagos.prompt = function(this)
    local prompt = ""
    if nyagos.which("starship") then
        prompt = prompt .. nyagos.eval("starship prompt 2> nul") .. "$e[37;1m" .. " "
        return nyagos.default_prompt(prompt, "")
    end
    return nyagos.default_prompt("$e[49;36;1m" .. this .. "$e[37;1m", "")
end

-- keybindings
nyagos.key["C_G"] = function()
    -- TODO: implement lua
    local ghq_path = nyagos.eval("ghq list -p | fzf")
    nyagos.chdir(ghq_path)
end

-- thx:
-- https://github.com/DeaR/dotfiles/blob/master/.nyagos
-- https://zenn.dev/tkm/scraps/8ad2a85ca44b33
-- documents:
-- https://github.com/nyaosorg/nyagos/blob/master/docs/01-Install_ja.md
-- https://github.com/nyaosorg/nyagos/blob/master/docs/02-Options_ja.md
-- https://github.com/nyaosorg/nyagos/blob/master/docs/04-Commands_ja.md
-- https://github.com/nyaosorg/nyagos/blob/master/docs/05-Startup_ja.md
-- https://github.com/nyaosorg/nyagos/blob/master/docs/06-Substitution_ja.md
-- https://github.com/nyaosorg/nyagos/blob/master/docs/07-LuaFunctions_ja.md
-- sample:
-- https://github.com/leviosa42/dotfiles/blob/main/.config/nyagos/dot.nyagos
-- https://github.com/DeaR/dotfiles/blob/master/.nyagos
--nyagos.envadd("", nyagos.getenv("") or "")

-- vim:set ft=lua: --
