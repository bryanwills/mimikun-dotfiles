local global = require("global")
local today = require("utils").today()
local path_sep = global.path_sep
local home = global.home
local is_linux = global.is_linux
local is_windows = global.is_windows
local is_not_human_rights = global.is_not_human_rights

-- config
nyagos.envadd("HOME", home)
local ghq_root = nyagos.getenv("GHQ_ROOT") or (home .. path_sep .. "ghq")
nyagos.envadd("GHQ_ROOT", ghq_root)
nyagos.envadd("GHQ_SELECTOR", nyagos.getenv("GHQ_SELECTOR") or "fzf")
local xdg_config_home = home .. path_sep .. ".config"
local starship_path = xdg_config_home .. path_sep .. "starship"
local starship_config = starship_path .. path_sep .. "starship.toml"
nyagos.envadd("STARSHIP_CONFIG", nyagos.getenv("STARSHIP_CONFIG") or starship_config)

-- nyagos envs
nyagos.envadd("NYAGOS_CONFIG", (home .. path_sep .. ".nyagos"))
nyagos.envadd("NYAGOS_CONFIG_DIR", (home .. path_sep .. ".config" .. path_sep .. "nyagos"))

-- set PATHs
local cargo_path = home .. path_sep .. ".cargo"
local deno_path = home .. path_sep .. ".deno"

-- Windows and Linux tools
nyagos.envadd("PATH", cargo_path .. path_sep .. "bin")
nyagos.envadd("PATH", deno_path .. path_sep .. "bin")

-- neovim vars
local windows_nvim_config = home .. path_sep .. "AppData" .. path_sep .. "Local" .. path_sep .. "nvim"
local linux_nvim_config = xdg_config_home .. path_sep .. "nvim"
local nvim_config = is_windows and windows_nvim_config or linux_nvim_config
nyagos.envadd("EDITOR", nyagos.getenv("EDITOR") or "nvim")
nyagos.envadd("NVIM_APPNAME", nyagos.getenv("NVIM_APPNAME") or "nvim")
nyagos.envadd("NVIM_CONFIG", nyagos.getenv("NVIM_CONFIG") or nvim_config)

{{ if eq .chezmoi.hostname "TanakaPC" -}}
-- Work PC
local workspace_path = ghq_root .. path_sep .. "ytanak4"
    {{ if eq .chezmoi.os "linux" -}}
-- Work WSL Linux
local win_home_path = "/mnt/c/Users/yuto/"
    {{ else -}}
-- Work Windows
local win_home_path = home
    {{ end -}}
local win_documents = win_home_path .. path_sep .. "Documents"
local obsidian_vault_root_path = win_documents .. path_sep .. "ytanak4_Obsidian_Vault" .. path_sep .. "ytanak4_vault"
{{ else -}}
-- Home PCs
local workspace_path = ghq_root .. path_sep .. "mimikun"
    {{ if eq .chezmoi.os "linux" -}}
        {{ if ne .chezmoi.hostname "azusa" -}}
-- Home WSL Linux
local win_home_path = "/mnt/c/Users/dzdzb/"
local win_documents = win_home_path .. path_sep .. "Documents"
local obsidian_vault_root_path = nil -- TODO:
        {{ else -}}
-- Azusa ArchLinux
local obsidian_vault_root_path = nil -- TODO:
        {{ end -}}
    {{ else -}}
        -- Home Windows
local win_home_path = home
local win_documents = win_home_path .. path_sep .. "Documents"
local obsidian_vault_root_path = nil -- TODO:
    {{ end -}}
{{ end -}}

nyagos.envadd("WIN_HOME_PATH", win_home_path)
nyagos.envadd("win_home_path", win_home_path)
local win_home = win_home_path
nyagos.envadd("WIN_HOME", win_home)
nyagos.envadd("win_home", win_home)
nyagos.envadd("WIN_DOCUMENTS", win_documents)
nyagos.envadd("win_documents", win_documents)
local win_desktop = win_home .. path_sep .. "Desktop"
nyagos.envadd("WIN_DESKTOP", win_desktop)
nyagos.envadd("win_desktop", win_desktop)
local win_downloads = win_home .. path_sep .. "Downloads"
nyagos.envadd("WIN_DOWNLOADS", win_downloads)
nyagos.envadd("win_downloads", win_downloads)
local windl = win_downloads
nyagos.envadd("WINDL", windl)
nyagos.envadd("windl", windl)

nyagos.envadd("obsidian_vault_root_path", obsidian_vault_root_path)
local obsidian_vault_path = obsidian_vault_root_path 
nyagos.envadd("obsidian_vault_path", obsidian_vault_path)
local obsidian_dailynote_path = obsidian_vault_path .. "001_DailyNotes"
nyagos.envadd("obsidian_dailynote_path", obsidian_dailynote_path)
local obsidian = obsidian_dailynote_path
nyagos.envadd("obsidian", obsidian)

-- Linux only tools
if is_linux then
    local xdg_cache_home = home .. path_sep .. ".cache"
    local dot_local = home .. path_sep .. ".local"
    local xdg_data_home = dot_local .. path_sep .. "share"
    local xdg_state_home = dot_local .. path_sep .. "state"

    -- XDG base directory
    nyagos.envadd("XDG_CONFIG_HOME", nyagos.getenv("XDG_CONFIG_HOME") or xdg_config_home)
    nyagos.envadd("XDG_CACHE_HOME", nyagos.getenv("XDG_CACHE_HOME") or xdg_cache_home)
    nyagos.envadd("XDG_DATA_HOME", nyagos.getenv("XDG_DATA_HOME") or xdg_data_home)
    nyagos.envadd("XDG_STATE_HOME", nyagos.getenv("XDG_STATE_HOME") or xdg_state_home)
    -- envs
    nyagos.envadd("LANG", nyagos.getenv("LANG") or "en_US.UTF-8")
    nyagos.envadd("PIPENV_VENV_IN_PROJECT", nyagos.getenv("PIPENV_VENV_IN_PROJECT") or 1)
    nyagos.envadd("TZ", nyagos.getenv("TZ") or "Asia/Tokyo")
    nyagos.envadd("TODAY", nyagos.getenv("TODAY") or today)
    local starship_cache = starship_path .. path_sep .. "cache"
    nyagos.envadd("STARSHIP_CACHE", nyagos.getenv("STARSHIP_CACHE") or starship_cache)

    nyagos.envadd(
        "PATH",
        "/bin",
        "/sbin",
        "/usr/bin",
        "/usr/sbin",
        "/usr/games",
        "/usr/local/bin",
        "/usr/local/sbin",
        "/usr/local/games",
        "/usr/local/go/bin/",
        "/snap/bin",
        dot_local .. path_sep .. "bin",
        home .. path_sep .. "go" .. path_sep .. "bin",
        home .. path_sep .. ".npm-global" .. path_sep .. "bin",
        home .. path_sep .. ".gem" .. path_sep .. "ruby" .. path_sep .. "2.7.0" .. path_sep .. "bin",
        home .. path_sep .. "depot_tools",
        home .. path_sep .. ".fzf" .. path_sep .. "bin",
        home .. path_sep .. ".dotnet" .. path_sep .. "tools"
    )

    -- mise
    local mise_config_dir = xdg_config_home .. path_sep .. "mise"
    local mise_data_dir = xdg_data_home .. path_sep .. "mise"
    local mise_cache_dir = xdg_cache_home .. path_sep .. "mise"
    nyagos.envadd("MISE_CONFIG_DIR", nyagos.getenv("MISE_CONFIG_DIR") or mise_config_dir)
    nyagos.envadd("MISE_DATA_DIR", nyagos.getenv("MISE_DATA_DIR") or mise_data_dir)
    nyagos.envadd("MISE_CACHE_DIR", nyagos.getenv("MISE_CACHE_DIR") or mise_cache_dir)
    nyagos.envadd("MISE_GLOBAL_CONFIG_FILE", nyagos.getenv("MISE_GLOBAL_CONFIG_FILE") or (mise_config_dir .. path_sep .. "config.toml")
    nyagos.envadd("MISE_USE_VERSIONS_HOST", nyagos.getenv("MISE_USE_VERSIONS_HOST") or true)
    nyagos.envadd("MISE_LEGACY_VERSION_FILE", nyagos.getenv("MISE_LEGACY_VERSION_FILE") or 1)
    nyagos.envadd("MISE_LOG_FILE", nyagos.getenv("MISE_LOG_FILE") or (mise_cache_dir .. path_sep .."mise.log"))
    nyagos.envadd("MISE_ASDF_COMPAT", nyagos.getenv("MISE_ASDF_COMPAT") or 1)
    -- If not human rights, MISE_JOBS = 1.
    local mise_jobs = is_not_human_rights and 1 or 4
    nyagos.envadd("MISE_JOBS", nyagos.getenv("MISE_JOBS") or mise_jobs)
    nyagos.envadd("MISE_SHORTHANDS_FILE", nyagos.getenv("MISE_SHORTHANDS_FILE") or (mise_config_dir .. path_sep .. "shorthands.toml"))
    nyagos.envadd("MISE_YES", nyagos.getenv("MISE_YES") or 1)
    nyagos.envadd("MISE_NOT_FOUND_AUTO_INSTALL", nyagos.getenv("MISE_NOT_FOUND_AUTO_INSTALL") or false)
    nyagos.envadd("MISE_EXPERIMENTAL", nyagos.getenv("MISE_EXPERIMENTAL") or 1)

-- mise config
--#mise activate SHELL_NAME
-- Add mise shims to path
--set -x PATH "$XDG_DATA_HOME/mise/shims" $PATH
-- alias
--alias paleovim "$XDG_DATA_HOME/mise/installs/vim/latest/bin/vim"
--alias neovim "$XDG_DATA_HOME/mise/installs/neovim/nightly/bin/nvim"
--alias pvim paleovim
--alias nvim neovim
--alias vim nvim

    -- cabal config
    nyagos.envadd("PATH", home .. path_sep .. ".cabal" .. path_sep .. "bin")
    nyagos.envadd("PATH", home .. path_sep .. ".ghcup" .. path_sep .. "bin")

    -- wsl2-ssh-agent
    nyagos.envadd(
        "SSH_AUTH_SOCK",
        nyagos.getenv("SSH_AUTH_SOCK") or (home .. path_sep .. ".ssh" .. path_sep .. "wsl2-ssh-agent.sock")
    )

    -- https://github.com/antfu/ni config
    nyagos.envadd(
        "NI_CONFIG_FILE",
        nyagos.getenv("NI_CONFIG_FILE") or (xdg_config_home .. path_sep .. "ni" .. path_sep .. ".nirc")
    )

    -- codon config
    nyagos.envadd("PATH", home .. path_sep .. ".codon" .. path_sep .. "bin")

    -- Rye
    nyagos.envadd("PATH", home .. path_sep .. ".rye" .. path_sep .. "shims")

    -- luarocks
    nyagos.envadd("PATH", home .. path_sep .. ".luarocks" .. path_sep .. "bin")
    nyagos.envadd(
        "LUA_PATH",
        "/usr/local/share/lua/5.3/?.lua",
        "/usr/local/share/lua/5.3/?/init.lua",
        "/usr/local/lib/lua/5.3/?.lua",
        "/usr/local/lib/lua/5.3/?/init.lua",
        "./?.lua",
        "./?/init.lua",
        home .. ".luarocks/share/lua/5.3/?.lua",
        home .. ".luarocks/share/lua/5.3/?/init.lua"
    )
    nyagos.envadd(
        "LUA_CPATH",
        "/usr/local/lib/lua/5.3/?.so",
        "/usr/local/lib/lua/5.3/loadall.so",
        "./?.so",
        "$HOME/.luarocks/lib/lua/5.3/?.so"
    )

    -- Bun
    nyagos.envadd("BUN_INSTALL", nyagos.getenv("BUN_INSTALL") or (home .. path_sep .. ".bun"))
    nyagos.envadd("PATH", nyagos.getenv("BUN_INSTALL") .. path_sep .. "bin")

    -- fly.io
    nyagos.envadd("FLYCTL_INSTALL", nyagos.getenv("FLYCTL_INSTALL") or (home .. path_sep .. ".fly"))
    nyagos.envadd("PATH", nyagos.getenv("FLYCTL_INSTALL") .. path_sep .. "bin")

    -- pnpm
    local pnpm_home = xdg_config_home .. path_sep .. "pnpm"
    nyagos.envadd("PNPM_HOME", nyagos.getenv("PNPM_HOME") or pnpm_home)
    nyagos.envadd("PATH", nyagos.getenv("PNPM_HOME"))

    if is_not_human_rights then
        local java_home = xdg_cache_home
            .. path_sep
            .. "coursier"
            .. path_sep
            .. "arc"
            .. path_sep
            .. "https"
            .. path_sep
            .. "github.com"
            .. path_sep
            .. "AdoptOpenJDK"
            .. path_sep
            .. "openjdk8-binaries"
            .. path_sep
            .. "releases"
            .. path_sep
            .. "download"
            .. path_sep
            .. "jdk8u292-b10"
            .. path_sep
            .. "OpenJDK8U-jdk_x64_linux_hotspot_8u292b10.tar.gz"
            .. path_sep
            .. "jdk8u292-b10"
        -- JVM path
        nyagos.envadd("JAVA_HOME", nyagos.getenv("JAVA_HOME") or java_home)
        nyagos.envadd("PATH", nyagos.getenv("JAVA_HOME") .. "bin")

        -- coursier path
        local coursier_path = xdg_data_home .. path_sep .. "coursier" .. path_sep .. "bin"
        nyagos.envadd("PATH", coursier_path)
        -- # windowsのpathとかぶる問題防止
        nyagos.alias.cs = coursier_path .. "bin"
    end
    -- aqua
    nyagos.envadd("AQUA_ROOT_DIR", nyagos.getenv("AQUA_ROOT_DIR") or xdg_data_home .. path_sep .. "aquaproj-aqua")
    nyagos.envadd("PATH", nyagos.getenv("AQUA_ROOT_DIR") .. path_sep .. "bin")
end
